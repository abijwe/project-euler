package euler;

import util.Pair;
import static util.Arithmetic.*;
import static util.Primes.*;

import java.util.Set;

import static util.PrettyPrint.*;

/**
 * The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28.
 * The first ten terms would be:
 * 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
 * 
 * Let us list the factors of the first seven triangle numbers:
 * 1: 1
 * 3: 1,3
 * 6: 1,2,3,6
 * 10: 1,2,5,10
 * 15: 1,3,5,15
 * 21: 1,3,7,21
 * 28: 1,2,4,7,14,28
 * We can see that 28 is the first triangle number to have over five divisors.
 * What is the value of the first triangle number to have over five hundred divisors?
 * 
 * Link: https://projecteuler.net/problem=12
 * 
 * @author abijwe
 */
public class Problem012 {

    public static void main(String[] args) {
        int n = 1000;
        int numFactors = 0;
        Set<Long> allFactors = null;
        long sum = 0;
        while (numFactors < 500) {
            sum = sumN(n++);
            allFactors = divisors(sum);
            numFactors = allFactors.size();
        }
        printResult(sum);
    }
}
